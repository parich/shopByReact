{"ast":null,"code":"var _jsxFileName = \"/Users/parichsuriya/Desktop/react app/shop/frontend/src/screens/CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\nimport MessageBox from '../components/MessageBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CartScreen(props) {\n  _s();\n\n  const productId = props.match.params.id;\n  const qty = props.location.search ? Number(props.location.search.split('=')[1]) : 1;\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const removeFromCartHandler = id => {//dispatch(removeFromCart(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row top\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        children: [\"Car is empty.\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \" Go Shopping\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cartItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"small\",\n                src: item.image,\n                alt: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"min-30\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/product/${item.product}`,\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                value: item.qty,\n                onChange: e => dispatch(addToCart(item.product), Number(e.target.value)),\n                children: [...Array(item.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: x + 1,\n                  children: [\" \", x + 1]\n                }, x + 1, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"$\", item.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: removeFromCartHandler(item.product),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 50\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 37\n          }, this)\n        }, item.product, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartScreen, \"O8kV4FMad4uUEER48J0xtNwHiNw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["/Users/parichsuriya/Desktop/react app/shop/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","useDispatch","useSelector","Link","addToCart","removeFromCart","MessageBox","CartScreen","props","productId","match","params","id","qty","location","search","Number","split","cart","state","cartItems","dispatch","removeFromCartHandler","length","map","item","image","name","product","e","target","value","Array","countInStock","keys","x","price"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\nimport MessageBox from '../components/MessageBox';\n\nexport default function CartScreen(props) {\n    const productId = props.match.params.id;\n    const qty = props.location.search ? Number(props.location.search.split('=')[1]) : 1;\n\n    const cart = useSelector((state) => state.cart);\n    const { cartItems } = cart;\n\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty]);\n\n\n    const removeFromCartHandler = (id) => {\n        //dispatch(removeFromCart(id));\n    }\n\n    return (\n        <div className=\"row top\">\n            <div className=\"col-2\">\n                <h1>Shopping Cart</h1>\n                {\n                    cartItems.length === 0 ?\n                        <MessageBox>Car is empty.<Link to=\"/\"> Go Shopping</Link></MessageBox> :\n                        (<ul>\n                            {cartItems.map((item) => (\n                                <li key={item.product}>\n                                    <div className=\"row\">\n                                        <div>\n                                            <img className=\"small\" src={item.image} alt={item.name}></img>\n                                        </div>\n                                        <div className=\"min-30\">\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                        </div>\n                                        <div>\n                                            <select\n                                                value={item.qty}\n                                                onChange={\n                                                    e => dispatch(addToCart(item.product), Number(e.target.value))}>\n                                                {[...Array(item.countInStock).keys()].map((x) => (\n                                                    <option key={x + 1} value={x + 1}> {x + 1}</option>\n                                                ))}\n                                            </select>\n                                            <div>${item.price}</div>\n                                            <div><button type=\"button\" onClick={removeFromCartHandler(item.product)}>Delete</button></div>\n                                        </div>\n                                    </div>\n                                </li>\n                            ))}\n                        </ul>)\n                }\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}